[tool.poetry]
name = "any-api"
version = "0.0.0"
description = "Quick and easy to create OpenAPI/AsyncAPI, and provide corresponding extensions"
authors = ["so1n <qaz6803609@163.com>"]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.7"
pydantic = ">=1.9.2, <3.0.0"

[tool.poetry.dev-dependencies]
pytest = "6.2.5"
coverage = "5.5"
pytest-mock = "3.5.1"
python-multipart = "0.0.5"
pre-commit = "2.14.0"


[tool.poetry-dynamic-versioning]
enable = true
metadata=false
vcs = "git"
format = "v{base}"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 120
target-version = ['py37']

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
python_executable = ".venv/bin/python"

[tool.pytest]
testpaths = "tests"

[tool.coverage.run]
branch = true
source = ["any_api"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "continue",

    # type hints
    "if TYPE_CHECKING:",
    "pass",
]
